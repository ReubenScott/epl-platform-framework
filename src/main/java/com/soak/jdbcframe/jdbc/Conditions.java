package com.soak.jdbcframe.jdbc;import java.util.ArrayList;import java.util.List;/** 查询条件类型 */public class Conditions {  private StringBuffer sql = new StringBuffer();;// 拼接SQL  private List<Object> params = new ArrayList<Object>();// 条件值  // private String fieldname;// 条件名  // private Object[] params;// 条件值  // 拼接SQL  // public String prepareSql() {  // StringBuffer sb = new StringBuffer();  // sb.append(" and " + this.fieldname + escapeOperator() );  // return sb.toString();  // }  public StringBuffer getSql() {    return sql;  }  public void setSql(StringBuffer sql) {    this.sql = sql;  }  public List<Object> getParams() {    return params;  }  public void setParams(List<Object> params) {    this.params = params;  }    /**   * 添加查询条件 in    * @param propertyName   * @param value   */  public void in(String propertyNames, Object... value) {    sql.append(" (" + propertyNames + ") in (" );    int fieldsNumber = propertyNames.split(",").length;  // Number of fields        for(int i = 0 ; i< ( value.length / fieldsNumber) ; i++ ){      if( fieldsNumber == 1 ){  // 1个属性条件        if(i > 0){          sql.append(",?");        } else{          sql.append("?");        }        params.add(value[i]);      } else {  // 多个 属性条件        if(i > 0){          sql.append(",(");        } else {          sql.append("(");        }        for(int k =0 ; k < fieldsNumber ; k++ ){          if(k > 0){            sql.append(",?");          } else {            sql.append("?");          }          params.add(value[ i*fieldsNumber + k]);        }        sql.append(")");      }    }    sql.append(") ");  }    }