<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
  <property name="LOG_HOME" value="d:/logs" />
  <property name="APP_NAME" value="jdbc" />
  <property name="maxHistory" value="30" />    <!-- 文件历史数 -->
  <property name="totalSizeCap" value="10G" />    <!-- 限制日志文件大小，超出之后会先删除较旧的日志  -->

  <!--
    格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 ， %L 行号 ， %M 方法名 
  -->
  <!-- 生产模式  %d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{50} - %msg%n     -->
  <!-- 开发模式  %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} %L %M %caller{1} - %msg%n  -->
  <property name="Layout_Style" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{50} - %msg%n" />
  <property name="outPattern" value="[%p] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t][%c]%C:%L - %m %n" />

  <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss" />

  <!-- 控制台输出 -->
  <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <Encoding>UTF-8</Encoding> <!-- 日志输出编码 -->
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>${Layout_Style}</pattern>
    </layout>
  </appender>


  <!-- 时间滚动输出 level为 DEBUG 日志 -->
  <appender name="file-debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <Encoding>UTF-8</Encoding>
    <File>${LOG_HOME}/${APP_NAME}.debug</File>
    <!-- 日志级别限制 只记录级别为DEBUG的日志内容 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <FileNamePattern>${LOG_HOME}/${APP_NAME}.debug-%d{yyyy-MM-dd}-%i.gz</FileNamePattern>
      <MaxHistory>${maxHistory}</MaxHistory>
      <totalSizeCap>${totalSizeCap}</totalSizeCap>  
      <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <MaxFileSize>10MB</MaxFileSize> <!-- 单个日志文件最大的大小  -->
      </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>${Layout_Style}</pattern>
    </layout>
  </appender>

  <!-- 时间滚动输出 level为 INFO 日志 -->
  <appender name="file-info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <Encoding>UTF-8</Encoding>
    <File>${LOG_HOME}/${APP_NAME}.info</File>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <FileNamePattern>${LOG_HOME}/${APP_NAME}.info-%d{yyyy-MM-dd}-%i.gz</FileNamePattern>
      <MaxHistory>${maxHistory}</MaxHistory>
      <totalSizeCap>${totalSizeCap}</totalSizeCap>  
      <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <MaxFileSize>10MB</MaxFileSize>
      </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>${Layout_Style}</pattern>
    </layout>
  </appender>


  <!-- 时间滚动输出 level为 ERROR 日志 -->
  <appender name="file-error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <Encoding>UTF-8</Encoding>
    <File>${LOG_HOME}/${APP_NAME}.error</File>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <FileNamePattern>${LOG_HOME}/${APP_NAME}.error-%d{yyyy-MM-dd}-%i.gz</FileNamePattern>
      <MaxHistory>${maxHistory}</MaxHistory>
      <totalSizeCap>${totalSizeCap}</totalSizeCap>  
      <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <MaxFileSize>10MB</MaxFileSize>
      </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>${Layout_Style}</pattern>
    </layout>
  </appender>

  <!--  异步输出，异步的log片段必须在同步段后面，否则不起作用  -->
  <appender name="async-debug" class="ch.qos.logback.classic.AsyncAppender">
    <discardingThreshold>0</discardingThreshold> <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <queueSize>256</queueSize>  <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <appender-ref ref="file-debug" />
  </appender>

  <appender name="async-info" class="ch.qos.logback.classic.AsyncAppender">
    <discardingThreshold>0</discardingThreshold>
    <queueSize>256</queueSize>
    <appender-ref ref="file-info" />
  </appender>
  
  <appender name="async-error" class="ch.qos.logback.classic.AsyncAppender">
    <discardingThreshold>0</discardingThreshold>
    <queueSize>256</queueSize>
    <appender-ref ref="file-error" />
  </appender>
  

  <!-- 日志输出级别 -->
  <root level="DEBUG">
    <appender-ref ref="console" />
    <appender-ref ref="async-debug" />
    <appender-ref ref="async-info" />
    <appender-ref ref="async-error" />
  </root>

</configuration>